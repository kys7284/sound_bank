<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
 
 <mapper namespace="com.boot.sound.loan.dao.LoanDAO">
 	<select id="loanList" resultType="com.boot.sound.loan.dto.LoanDTO">
 		SELECT * FROM LOAN_TBL
 		ORDER BY LOAN_ID
 	</select>
 
 	<insert id="loanInsert">
 		INSERT INTO LOAN_TBL(LOAN_NAME,LOAN_MAX_AMOUNT,LOAN_MIN_AMOUNT,INTEREST_RATE,LOAN_TERM,LOAN_INFO,LOAN_TYPE)
		VALUES( #{loan_name},#{loan_max_amount},#{loan_min_amount},#{interest_rate},#{loan_term},#{loan_info},#{loan_type})
 	</insert>

	<select id="loanDetail" parameterType="int">
		SELECT * FROM LOAN_TBL
		WHERE loan_id = #{loan_id}
	</select>
	
	<delete id="loanDelete" parameterType="int">
		DELETE FROM LOAN_TBL
		WHERE loan_id = #{loan_id}
	</delete>
	
	<update id="loanUpdate" parameterType="com.boot.sound.loan.dto.LoanDTO">
		UPDATE LOAN_TBL
		SET loan_name = #{loan_name}
		,	loan_min_amount = #{loan_min_amount}
		,	loan_max_amount	= #{loan_max_amount}
		,	interest_rate = #{interest_rate}
		,	loan_term = #{loan_term}
		,	loan_info = #{loan_info}
		,	loan_type = #{loan_type}
		WHERE loan_id = #{loan_id}
	</update>
	
	<select id="loanCnt" resultType="int">
		SELECT COUNT(*) FROM LOAN_TBL
	</select>
	
	<select id="loanTypeSearch" parameterType="String" resultType="com.boot.sound.loan.dto.LoanDTO">
		SELECT * FROM LOAN_TBL
 		WHERE loan_type = #{loan_type}
	</select>
	
	<select id="loanTypeCnt" parameterType="String" resultType="int">
		SELECT COUNT(*) FROM LOAN_TBL
		WHERE loan_type = #{loan_type}
	</select>
	
	<select id="loanNameSearch" parameterType="String" resultType="com.boot.sound.loan.dto.LoanDTO">
	SELECT * FROM LOAN_TBL
	WHERE loan_name LIKE '%${loan_name}%'
	</select>
	
	<select id="loanNameCnt" parameterType="String" resultType="int">
	SELECT COUNT(*) FROM LOAN_TBL
	WHERE loan_name LIKE '%${loan_name}%'
	</select>
	
	<insert id="consentInsert" parameterType="com.boot.sound.loan.dto.LoanConsentDTO">
		INSERT INTO LOAN_AGREE_STATUS_TBL(loan_id,customer_id,consent_use1,consent_use2,consent_use3,consent_use4,consent_view1,consent_view2,consent_view3,consent_view4)
		VALUES (#{loan_id},#{customerId},#{consent_use1},#{consent_use2},#{consent_use3},#{consent_use4},#{consent_view1},#{consent_view2},#{consent_view3},#{consent_view4})
	</insert>
	
	<select id="loanCustomer" parameterType="map" resultType="com.boot.sound.loan.dto.LoanCustomerDTO">
	  SELECT 
	    l.*,
	    (SELECT GROUP_CONCAT(a.ACCOUNT_NUMBER SEPARATOR ', ')
	     FROM ACCOUNT_TBL a 
	     WHERE a.CUSTOMER_ID = #{customerId}) AS accountNumbers,
	    (SELECT a.CUSTOMER_ID 
	     FROM ACCOUNT_TBL a 
	     WHERE a.CUSTOMER_ID = #{customerId} 
	     LIMIT 1) AS customer_id
	  FROM LOAN_TBL l
	  WHERE l.LOAN_ID = #{loan_id}
	</select>
 
 	<!-- 대출 신청  -->
 	<insert id="loanApply" parameterType="com.boot.sound.loan.dto.LoanStatusDTO">
 		INSERT INTO loan_status_tbl(loan_name,loan_id,interest_rate,customer_id,customer_income,customer_credit_score,loan_amount,balance,account_number,repayment_method,repayment_date,loan_type,loan_progress,loan_term,remaining_term)
 		VALUES(#{loanName}, #{loanId}, #{interestRate}, #{customerId}, #{customerIncome}, #{customerCreditScore}, #{loanAmount}, #{loanAmount}, #{accountNumber}, #{repaymentMethod}, #{repaymentDate}, #{loanType}, '신청', #{loanTerm},#{remainingTerm})

 	</insert>
 	
 	<select id="loanStatus" resultType="com.boot.sound.loan.dto.LoanStatusDTO">
	    SELECT
	        loan_status_no AS loanStatusNo,
	        customer_id AS customerId,
	        loan_id AS loanId,
	        loan_name AS loanName,
	        interest_rate AS interestRate,
	        customer_income AS customerIncome,
	        customer_credit_score AS customerCreditScore,
	        loan_amount AS loanAmount,
	        balance,
	        account_number AS accountNumber,
	        repayment_method AS repaymentMethod,
	        repayment_date AS repaymentDate,
	        loan_type AS loanType,
	        loan_progress AS loanProgress,
	        loan_date AS loanDate,
	        loan_term AS loanTerm,
	        remaining_term AS remainingTerm
	    FROM loan_status_tbl
	    ORDER BY loan_status_no
	</select>
 	
 	<update id="loanStatusUpdate" >
 		UPDATE loan_status_tbl
 		set loan_progress  = #{loan_progress}
 		WHERE loan_status_no = #{loan_status_no}
 	</update>
 	
 	<select id="selecCustomer" parameterType="String" resultType="com.boot.sound.customer.CustomerDTO">
 		SELECT 	customer_name,customer_phone_number
 		FROM 	CUSTOMER_TBL
 		WHERE customer_id = #{customerId}
 	</select>
 	
 	<select id="selectCustomerName" parameterType="String" resultType="String">
 		SELECT customer_name
 		FROM CUSTOMER_TBL
 		WHERE customer_id =#{customerId}
 	</select>
 	
 	<insert id="insertTransaction" parameterType="map">
    INSERT INTO TRANSACTION_TBL (
        ACCOUNT_NUMBER,
        TRANSACTION_TYPE,
        AMOUNT,
        CURRENCY,
        COMMENT,
        CUSTOMER_NAME,
        ACCOUNT_TYPE
    )
    VALUES (
        #{accountNumber},
        #{transactionType},
        #{amount},
        #{currency},
        #{comment},
        #{customerName},
        #{accountType}
    )
	</insert>
	
	<insert id="insertInterestPayment" parameterType="com.boot.sound.loan.dto.LoanInterestPaymentDTO">
    INSERT INTO loan_interest_payment_tbl (
        LOAN_ID,
        CUSTOMER_ID,
        REPAYMENT_AMOUNT,
        INTEREST_AMOUNT,
        PRINCIPAL_AMOUNT,
        REPAYMENT_TERM,
        REPAYMENT_DATE,
        ACTUAL_REPAYMENT_DATE,
        REPAYMENT_STATUS
    )
    VALUES (
        #{loanId},
        #{customerId},
        #{repaymentAmount},
        #{interestAmount},
        #{principalAmount},
        #{repaymentTerm},
        #{repaymentDate},
        #{actualRepaymentDate},
        #{repaymentStatus}
    )
	</insert>
	
	<!-- 미납 등록된 내역이 5일 경과된 내역을 조회  -->
	<select id="findOverduePayments" resultType="com.boot.sound.loan.dto.LoanInterestPaymentDTO">
    SELECT 
        INTEREST_PAYMENT_NO AS interestPaymentNo,
        LOAN_ID AS loanId,
        CUSTOMER_ID AS customerId,
        REPAYMENT_AMOUNT AS repaymentAmount,
        INTEREST_AMOUNT AS interestAmount,
        PRINCIPAL_AMOUNT AS principalAmount,
        REPAYMENT_TERM AS repaymentTerm,
        REPAYMENT_DATE AS repaymentDate,
        ACTUAL_REPAYMENT_DATE AS actualRepaymentDate,
        REPAYMENT_STATUS AS repaymentStatus,
        CREATED_AT AS createdAt,
        UPDATED_AT AS updatedAt
    FROM loan_interest_payment_tbl
    WHERE REPAYMENT_STATUS = '미납'
      AND TIMESTAMPDIFF(DAY, created_at, NOW()) > 5
</select>
	
	<!-- 조회된 내역 납부상태 변경  -->
	<update id="updateRepaymentStatus">
	    UPDATE loan_interest_payment_tbl
	    SET REPAYMENT_STATUS = #{repaymentStatus}
	    WHERE INTEREST_PAYMENT_NO = #{interestPaymentNo}
	</update>
	
	
	
	<!-- 연체 정보 등록  -->
	<insert id="insertLatePayment" parameterType="com.boot.sound.loan.dto.LoanLatePaymentDTO">
    INSERT INTO loan_late_payment_tbl (
        LOAN_ID, CUSTOMER_ID, UNPAID_AMOUNT, REPAYMENT_STATUS, OVERDUE_INTEREST
    ) VALUES (
        #{loanId}, #{customerId}, #{unpaidAmount}, #{repaymentStatus}, #{overdueInterest}
    )
	</insert>
	
	<resultMap id="LatePaymentResultMap" type="com.boot.sound.loan.dto.LoanLatePaymentDTO">
	    <result property="loanId" column="LOAN_ID" />
	    <result property="customerId" column="CUSTOMER_ID" />
	    <result property="unpaidAmount" column="UNPAID_AMOUNT" />
	    <result property="repaymentStatus" column="REPAYMENT_STATUS" />
	    <result property="overdueInterest" column="OVERDUE_INTEREST" />
	</resultMap>

	<select id="getLatePayments" resultMap="LatePaymentResultMap">
	    SELECT * FROM loan_late_payment_tbl
	    WHERE REPAYMENT_STATUS = '연체'
	</select>
	
	<select id="getAccountNumber" resultType="String">
	   SELECT account_number
		  FROM loan_status_tbl
		  WHERE loan_id = #{loanId}
		    AND customer_id = #{customerId}
	</select>
	
	<select id="getCustomerName" resultType="String">
	    SELECT customer_name FROM customer_tbl
	    WHERE customer_id = #{customerId}
	</select>
	
	<update id="updateLatePaymentStatusToPaid">
	    UPDATE loan_late_payment_tbl
	    SET REPAYMENT_STATUS = #{repaymentStatus}
	    WHERE loan_id = #{loanId}
	      AND customer_id = #{customerId}
	</update>

	<update id="updateInterestPaymentStatus">
	    UPDATE loan_interest_payment_tbl
	    SET REPAYMENT_STATUS = #{repaymentStatus}
	    WHERE loan_id = #{loanId}
	      AND customer_id = #{customerId}
	</update>
	
	<update id="reduceLoanRemainingTerm">
	    UPDATE loan_status_tbl
	    SET remaining_term = remaining_term - 1
	    WHERE loan_id = #{loanId}
	</update>
	
	<select id="getMissedPayments" resultType="com.boot.sound.loan.dto.LoanInterestPaymentDTO">
	 	 SELECT * FROM loan_interest_payment_tbl
		WHERE repayment_status = '미납'
	</select>
	
	
	
	
	
 
 </mapper>