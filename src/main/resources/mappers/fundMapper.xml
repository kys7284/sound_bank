<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
 
<mapper namespace="com.boot.sound.fund.repo.FundRepository">

    <!-- 펀드상품 목록 -->
    <select id="fundList" resultType="com.boot.sound.fund.dto.FundDTO">
        SELECT * FROM fund_tbl
         ORDER BY fund_id ASC
    </select>

    <!-- 펀드상품 등록 (fund_risk_type 컬럼까지 불포함) -->
    <insert id="insertFund" parameterType="com.boot.sound.fund.dto.FundDTO">
	    INSERT INTO fund_tbl (
	        fund_name, fund_company, fund_type, fund_grade,
	        fund_fee_rate, fund_upfront_fee,
	        return_1m, return_3m, return_6m, return_12m
	    ) VALUES (
	        #{fund_name}, #{fund_company}, #{fund_type}, #{fund_grade},
	        #{fund_fee_rate}, #{fund_upfront_fee},
	        #{return_1m}, #{return_3m}, #{return_6m}, #{return_12m}
	    )
	    ON DUPLICATE KEY UPDATE
	        fund_company = VALUES(fund_company),
	        fund_type = VALUES(fund_type),
	        fund_grade = VALUES(fund_grade),
	        fund_fee_rate = VALUES(fund_fee_rate),
	        fund_upfront_fee = VALUES(fund_upfront_fee),
	        return_1m = VALUES(return_1m),
	        return_3m = VALUES(return_3m),
	        return_6m = VALUES(return_6m),
	        return_12m = VALUES(return_12m)
    </insert>

	<!-- 등록된 펀드 상품 목록 조회 -->
    <select id="getRegisteredFunds" resultType="com.boot.sound.fund.dto.FundDTO">
        SELECT * FROM fund_tbl
    </select>

    <!-- 펀드상품 상세보기 (1건 조회) -->
    <select id="findById" resultType="com.boot.sound.fund.dto.FundDTO">
        SELECT * FROM fund_tbl
        WHERE fund_id = #{fund_id}
    </select>

    <!-- 펀드상품 수정 -->
    <update id="updateFund" parameterType="com.boot.sound.fund.dto.FundDTO">
        UPDATE fund_tbl
        SET fund_name = #{fund_name},
            fund_company = #{fund_company},
            fund_type = #{fund_type},
            fund_grade = #{fund_grade},
            fund_fee_rate = #{fund_fee_rate},
            fund_upfront_fee = #{fund_upfront_fee},
            return_1m = #{return_1m},
            return_3m = #{return_3m},
            return_6m = #{return_6m},
            return_12m = #{return_12m},
            fund_risk_type = #{fund_risk_type}
        WHERE fund_id = #{fund_id}
    </update>

    <!-- 펀드상품 삭제 -->
    <delete id="deleteFund" parameterType="com.boot.sound.fund.dto.FundDTO">
        DELETE FROM fund_tbl
        WHERE fund_id = #{fund_id, jdbcType=BIGINT}
    </delete>

	<!-- 펀드 개별 투자성향 업데이트 (AI 학습후 fund_risk_type 포함)-->
	<update id="updateRiskType" parameterType="map">
	    UPDATE fund_tbl
	    SET fund_risk_type = #{fund_risk_type}
	    WHERE fund_name = #{fund_name}
	</update>

    <!-- 투자 성향 테스트 결과 등록 -->
    <insert id="insertTestResult" parameterType="com.boot.sound.fund.dto.FundTestDTO">
	    INSERT INTO fund_test_tbl(CUSTOMER_ID, FUND_TEST_DATE, FUND_RISK_TYPE)
	    VALUES (
	        #{customer_id},
	        DEFAULT,
	        #{fund_risk_type}
	    )
	</insert>

	<!-- 고객의 투자성향을 customer_tbl에 업데이트 -->
	<update id="updateCustomerRiskType">
	     UPDATE customer_tbl
		    SET CUSTOMER_RISK_TYPE = (
		        SELECT f.FUND_RISK_TYPE
		        FROM fund_test_tbl f
		        WHERE f.CUSTOMER_ID = #{customer_id}
		        ORDER BY f.FUND_TEST_DATE DESC
		        LIMIT 1
		    )
		    WHERE CUSTOMER_ID = #{customer_id}
	</update>

    <!-- 고객의 투자 성향 조회 -->
    <select id="getCustomerRiskType" parameterType="String" resultType="String">
        SELECT CUSTOMER_RISK_TYPE
        FROM customer_tbl
        WHERE CUSTOMER_ID = #{customer_id}
    </select>

    <!-- 고객의 투자 성향에 맞는 펀드 목록 조회 -->
    <select id="recommendedFunds" parameterType="String" resultType="com.boot.sound.fund.dto.FundDTO">
        SELECT *
        FROM fund_tbl
        WHERE FUND_RISK_TYPE = #{fund_risk_type}
    </select>
    
    <!-- 고객 보유계좌 조회 -->
    <select id="findByCustomerId" resultType="com.boot.sound.inquire.account.AccountDTO">
	    SELECT account_number, customer_id, account_type, balance
	    FROM account_tbl
	    WHERE CUSTOMER_ID = #{customerId}
	</select>
	
	<!-- 고객 보유계좌 비밀번호 확인 -->
	<select id="findPasswordByAccount" resultType="String">
	  SELECT account_pwd
	  FROM account_tbl
	  WHERE account_number = #{account_number}
	</select>
	
	<!-- 펀드 거래(매수/환매) 등록 -->
	<insert id="insertFundTransaction" parameterType="com.boot.sound.fund.dto.FundTransactionDTO">
	  INSERT INTO fund_transaction_tbl (
	    CUSTOMER_ID, FUND_ACCOUNT_ID, WITHDRAW_ACCOUNT_NUMBER, FUND_ID, FUND_TRANSACTION_TYPE,
	    FUND_INVEST_AMOUNT, FUND_UNITS_PURCHASED, FUND_PRICE_PER_UNIT,
	    FUND_TRANSACTION_DATE, STATUS
	  ) VALUES (
	    #{customerId}, #{fundAccountId}, #{withdrawAccountNumber}, #{fundId}, #{fundTransactionType},
	    #{fundInvestAmount}, #{fundUnitsPurchased}, #{fundPricePerUnit},
	    #{fundTransactionDate}, #{status}
	  )
	</insert>
	
	<!-- 펀드 거래 관리자 요청확인 -->
	<select id="findPendingTransactions" resultMap="fundTransactionMap">
	  SELECT FUND_TRANSACTION_ID
	  		, CUSTOMER_ID
	  		, FUND_ACCOUNT_ID
	  		, FUND_ID
	  		, FUND_TRANSACTION_TYPE
	  		, FUND_INVEST_AMOUNT
	  		, FUND_UNITS_PURCHASED
	  		, FUND_TRANSACTION_DATE
	  		, FUND_CURRENT_VALUE
	  		, FUND_PRICE_PER_UNIT
	  		, STATUS
	  		, WITHDRAW_ACCOUNT_NUMBER
	  FROM fund_transaction_tbl
	  WHERE STATUS = 'PENDING'
	  ORDER BY FUND_TRANSACTION_DATE DESC
	</select>
	
	<!-- 펀드 거래 관리자 승인/거절 -->
	<update id="updateStatus">
	  UPDATE fund_transaction_tbl
	  SET STATUS = #{status}
	  WHERE FUND_TRANSACTION_ID = #{fundTransactionId}
	</update>
	
	<!-- 펀드 매수 확정 -->
	<select id="findApprovedBuys" resultMap="fundTransactionMap">
	  SELECT
	    FUND_TRANSACTION_ID,
	    CUSTOMER_ID,
	    FUND_ACCOUNT_ID,
	    FUND_ID,
	    FUND_TRANSACTION_TYPE,
	    FUND_INVEST_AMOUNT,
	    FUND_UNITS_PURCHASED,
	    FUND_PRICE_PER_UNIT,
	    FUND_TRANSACTION_DATE,
	    STATUS,
	    WITHDRAW_ACCOUNT_NUMBER
	  FROM fund_transaction_tbl
	  WHERE CUSTOMER_ID = #{customer_id}
	    AND FUND_TRANSACTION_TYPE = 'BUY'
	    AND STATUS = 'APPROVED'
	</select>
	
	<resultMap id="fundTransactionMap" type="com.boot.sound.fund.dto.FundTransactionDTO">
	  <id property="fundTransactionId" column="FUND_TRANSACTION_ID" />
	  <result property="customerId" column="CUSTOMER_ID" />
	  <result property="fundAccountId" column="FUND_ACCOUNT_ID" />
	  <result property="fundId" column="FUND_ID" />
	  <result property="fundTransactionType" column="FUND_TRANSACTION_TYPE" />
	  <result property="fundInvestAmount" column="FUND_INVEST_AMOUNT" />
	  <result property="fundUnitsPurchased" column="FUND_UNITS_PURCHASED" />
	  <result property="fundTransactionDate" column="FUND_TRANSACTION_DATE" />
	  <result property="fundCurrentValue" column="FUND_CURRENT_VALUE" />
	  <result property="fundPricePerUnit" column="FUND_PRICE_PER_UNIT" />
	  <result property="status" column="STATUS" />
	  <result property="withdrawAccountNumber" column="WITHDRAW_ACCOUNT_NUMBER" />
	</resultMap>
	
	



</mapper>
